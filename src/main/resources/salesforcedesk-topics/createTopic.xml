<?xml version="1.0" encoding="UTF-8"?>
<!--
 ~  Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 ~
 ~  WSO2 Inc. licenses this file to you under the Apache License,
 ~  Version 2.0 (the "License"); you may not use this file except
 ~  in compliance with the License.
 ~  You may obtain a copy of the License at
 ~
 ~    http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~  Unless required by applicable law or agreed to in writing,
 ~  software distributed under the License is distributed on an
 ~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 ~  KIND, either express or implied.  See the License for the
 ~  specific language governing permissions and limitations
 ~  under the License.
-->
<!-- Method Documentation URL: http://dev.desk.com/API/companies/#create -->
<template name="createTopic" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="name" description="Subject of the topic."/>
    <parameter name="description" description="An optional description of the topic."/>
    <parameter name="allowQuestions"
               description="If true, allow customers to post questions about this topic in your Support Center."/>
    <parameter name="inSupportCenter"
               description="If true, show this topic in your Support Center."/>
    <sequence>
        <property name="uri.var.name" expression="$func:name"/>
        <property name="uri.var.description" expression="$func:description"/>
        <property name="uri.var.allowQuestions" expression="$func:allowQuestions"/>
        <property name="uri.var.inSupportCenter" expression="$func:inSupportCenter"/>
        <script language="js">
            <![CDATA[
            var name = mc.getProperty('uri.var.name');
            var description = mc.getProperty('uri.var.description');
            var allowQuestions = mc.getProperty('uri.var.allowQuestions');
            var inSupportCenter = mc.getProperty('uri.var.inSupportCenter');
            var urlQuery = ''+ mc.getProperty('uri.var.urlQuery');
            var jsonPayload = {};
            //Setting mandatory parameter to the payload.
            jsonPayload.name = name;
            //Setting optional parameters to the payload.
            if (description != null && description != "") {
                jsonPayload.description = description;
            }
            if (allowQuestions != null && allowQuestions != "") {
                jsonPayload.allow_questions = allowQuestions;
            }
            if (inSupportCenter != null && inSupportCenter != "") {
                jsonPayload.in_support_center = inSupportCenter;
            }
            // Add a leading '?' and remove the trailing '&'
            if (urlQuery != "") {
                urlQuery = '?' + urlQuery.toString().substring(0, urlQuery.toString().lastIndexOf("&"));
                mc.setProperty('uri.var.urlQuery', urlQuery);
            }
            mc.setPayloadJSON(jsonPayload);  
         ]]>
        </script>
        <call>
            <endpoint>
                <http method="post" uri-template="{+uri.var.apiUrl}/topics{+uri.var.urlQuery}"/>
            </endpoint>
        </call>
        <!-- Remove custom Headers from the API Response -->
        <header name="X-Runtime" action="remove" scope="transport"/>
        <header name="X-Rate-Limit-Limit" action="remove" scope="transport"/>
        <header name="X-UA-Compatible" action="remove" scope="transport"/>
        <header name="X-Rate-Limit-Remaining" action="remove" scope="transport"/>
        <header name="X-Request-Id" action="remove" scope="transport"/>
        <header name="X-Rack-Cache" action="remove" scope="transport"/>
        <header name="Status" action="remove" scope="transport"/>
        <header name="Cache-Control" action="remove" scope="transport"/>
        <header name="X-Frame-Options" action="remove" scope="transport"/>
        <header name="X-Rate-Limit-Reset" action="remove" scope="transport"/>
        <header name="X-AppVersion" action="remove" scope="transport"/>
        <header name="X-Powered-By" action="remove" scope="transport"/>
    </sequence>
</template>