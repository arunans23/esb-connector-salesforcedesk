<?xml version="1.0" encoding="UTF-8"?>
<!--
 ~  Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 ~
 ~  WSO2 Inc. licenses this file to you under the Apache License,
 ~  Version 2.0 (the "License"); you may not use this file except
 ~  in compliance with the License.
 ~  You may obtain a copy of the License at
 ~
 ~    http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~  Unless required by applicable law or agreed to in writing,
 ~  software distributed under the License is distributed on an
 ~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 ~  KIND, either express or implied.  See the License for the
 ~  specific language governing permissions and limitations
 ~  under the License.
-->
<!-- API Doc: http://dev.desk.com/API/cases/#search -->
<template name="searchCases" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="page" description="The number of the page."/>
    <parameter name="perPage" description="Limit the number of cases results per page."/>
    <parameter name="query"
               description="The query used to search across multiple fields with a single string and is useful."/>
    <parameter name="name" description="Customer's names. Comma delimited list of customer names."/>
    <parameter name="firstName"
               description="Customer's first names. Comma delimited list of customer first names."/>
    <parameter name="lastName"
               description="Customer's last names. Comma delimited list of customer first names."/>
    <parameter name="customerEmail"
               description="Customer's email addresses. Comma delimited list of customer email addresses."/>
    <parameter name="phone"
               description="Customer's phone number. Comma delimited list of customer phone numbers."/>
    <parameter name="company"
               description="Customer's company names. Comma delimited list of customer company names."/>
    <parameter name="twitter"
               description="Customer's Twitter screen names. Comma delimited list of customer Twitter screen names."/>
    <parameter name="labels" description="Case labels. Comma delimited list of case labels."/>
    <parameter name="caseIds" description="Case IDs. Comma delimited list of case IDs."/>
    <parameter name="subject" description="The subject of the case."/>
    <parameter name="description" description="Description of the case."/>
    <parameter name="status"
               description="Case statuses. Comma delimited list of case statuses 'new', 'open', 'pending', 'resolved' and 'closed'."/>
    <parameter name="priority"
               description="Case priorities. Comma delimited list of case priorities 1-10."/>
    <parameter name="assignedGroup" description="Case assigned group."/>
    <parameter name="assignedUser"
               description="Case assigned user 'me', 'none', 'unassigned', or name of agent."/>
    <parameter name="channels"
               description="Channel types. Comma delimited list of channels 'email', 'twitter', 'chat', 'callback', 'phone'."/>
    <parameter name="notes" description="Case notes."/>
    <parameter name="attachments" description="Case attachments."/>
    <parameter name="caseCustomKeyName" description="Case custom field key name."/>
    <parameter name="caseCustomKeyValue" description="Value for the case custom field key."/>
    <parameter name="created"
               description="Case created. Date range should be 'today' or 'yesterday' or 'week' or 'month' or 'year'."/>
    <parameter name="updated"
               description="Case updated. Date range should be 'today' or 'yesterday' or 'week' or 'month' or 'year'."/>
    <parameter name="changed"
               description="Case changed. Date range should be 'today' or 'yesterday' or 'week' or 'month' or 'year'."/>
    <parameter name="sinceCreatedAt"
               description="Returns results with a Create Date (in unix time) greater than (that is, more recent than) the specified Date."/>
    <parameter name="maxCreatedAt"
               description="Returns results with a Create Date (in unix time) less than (that is, older than) or equal to the specified Date."/>
    <parameter name="sinceUpdatedAt"
               description="Returns results with an Update Date (in unix time) greater than (that is, more recent than) the specified Date."/>
    <parameter name="maxUpdatedAt"
               description="Returns results with an Update Date (in unix time) less than (that is, older than) or equal to the specified Date."/>
    <parameter name="sinceChangedAt"
               description="Returns results with a Change Date (in unix time) greater than (that is, more recent than) the specified Date."/>
    <parameter name="maxChangedAt"
               description="Returns results with a Change Date (in unix time) less than (that is, older than) or equal to the specified Date."/>
    <parameter name="sinceId"
               description="Returns results with an ID greater than or equal to (that is, more recent than) the specified ID."/>
    <parameter name="maxId"
               description="Returns results with an ID less than (that is, older than) or equal to the specified ID."/>
    <parameter name="sortField" description="Case field on which would like to sort."/>
    <parameter name="sortDirection"
               description="Direction to sort. 'asc' for ascending, 'desc' for descending."/>
    <sequence>
        <property name="uri.var.page" expression="$func:page"/>
        <property name="uri.var.perPage" expression="$func:perPage"/>
        <property name="uri.var.query" expression="$func:query"/>
        <property name="uri.var.name" expression="$func:name"/>
        <property name="uri.var.firstName" expression="$func:firstName"/>
        <property name="uri.var.lastName" expression="$func:lastName"/>
        <property name="uri.var.customerEmail" expression="$func:customerEmail"/>
        <property name="uri.var.phone" expression="$func:phone"/>
        <property name="uri.var.company" expression="$func:company"/>
        <property name="uri.var.twitter" expression="$func:twitter"/>
        <property name="uri.var.labels" expression="$func:labels"/>
        <property name="uri.var.caseIds" expression="$func:caseIds"/>
        <property name="uri.var.subject" expression="$func:subject"/>
        <property name="uri.var.description" expression="$func:description"/>
        <property name="uri.var.status" expression="$func:status"/>
        <property name="uri.var.priority" expression="$func:priority"/>
        <property name="uri.var.assignedGroup" expression="$func:assignedGroup"/>
        <property name="uri.var.assignedUser" expression="$func:assignedUser"/>
        <property name="uri.var.channels" expression="$func:channels"/>
        <property name="uri.var.notes" expression="$func:notes"/>
        <property name="uri.var.attachments" expression="$func:attachments"/>
        <property name="uri.var.caseCustomKeyName" expression="$func:caseCustomKeyName"/>
        <property name="uri.var.caseCustomKeyValue" expression="$func:caseCustomKeyValue"/>
        <property name="uri.var.created" expression="$func:created"/>
        <property name="uri.var.updated" expression="$func:updated"/>
        <property name="uri.var.changed" expression="$func:changed"/>
        <property name="uri.var.sinceCreatedAt" expression="$func:sinceCreatedAt"/>
        <property name="uri.var.maxCreatedAt" expression="$func:maxCreatedAt"/>
        <property name="uri.var.sinceUpdatedAt" expression="$func:sinceUpdatedAt"/>
        <property name="uri.var.maxUpdatedAt" expression="$func:maxUpdatedAt"/>
        <property name="uri.var.sinceChangedAt" expression="$func:sinceChangedAt"/>
        <property name="uri.var.maxChangedAt" expression="$func:maxChangedAt"/>
        <property name="uri.var.sinceId" expression="$func:sinceId"/>
        <property name="uri.var.maxId" expression="$func:maxId"/>
        <property name="uri.var.sortField" expression="$func:sortField"/>
        <property name="uri.var.sortDirection" expression="$func:sortDirection"/>
        <script language="js">
            <![CDATA[
            var urlQuery = ''+mc.getProperty("uri.var.urlQuery");
            var page = mc.getProperty("uri.var.page");
            var perPage = mc.getProperty("uri.var.perPage");    
            var query=mc.getProperty("uri.var.query");
            var name=mc.getProperty("uri.var.name");
            var firstName=mc.getProperty("uri.var.firstName");
            var lastName=mc.getProperty("uri.var.lastName");
            var customerEmail=mc.getProperty("uri.var.customerEmail");
            var phone=mc.getProperty("uri.var.phone");
            var company=mc.getProperty("uri.var.company");
            var twitter=mc.getProperty("uri.var.twitter");
            var labels=mc.getProperty("uri.var.labels");
            var caseIds=mc.getProperty("uri.var.caseIds");
            var subject=mc.getProperty("uri.var.subject");
            var description=mc.getProperty("uri.var.description");
            var status=mc.getProperty("uri.var.status");
            var priority=mc.getProperty("uri.var.priority");
            var assignedGroup=mc.getProperty("uri.var.assignedGroup");
            var assignedUser=mc.getProperty("uri.var.assignedUser");
            var channels=mc.getProperty("uri.var.channels");
            var notes=mc.getProperty("uri.var.notes");
            var attachments=mc.getProperty("uri.var.attachments");
            var caseCustomKeyName=mc.getProperty("uri.var.caseCustomKeyName");
            var caseCustomKeyValue=mc.getProperty("uri.var.caseCustomKeyValue");
            var created=mc.getProperty("uri.var.created");
            var updated=mc.getProperty("uri.var.updated");
            var changed=mc.getProperty("uri.var.changed");
            var sinceCreatedAt=mc.getProperty("uri.var.sinceCreatedAt");
            var maxCreatedAt=mc.getProperty("uri.var.maxCreatedAt");
            var sinceUpdatedAt=mc.getProperty("uri.var.sinceUpdatedAt");
            var maxUpdatedAt=mc.getProperty("uri.var.maxUpdatedAt");
            var sinceChangedAt=mc.getProperty("uri.var.sinceChangedAt");
            var maxChangedAt=mc.getProperty("uri.var.maxChangedAt");
            var sinceId=mc.getProperty("uri.var.sinceId");
            var maxId=mc.getProperty("uri.var.maxId");
            var sortField=mc.getProperty("uri.var.sortField");
            var sortDirection=mc.getProperty("uri.var.sortDirection");
            if (page!=null && page!=""){
               urlQuery+='page=' + page +'&';
            }
            if (perPage!=null && perPage!=""){
               urlQuery+='per_page=' + perPage +'&';
            }
            if(query!=null && query!=""){
               urlQuery+='q='+query+'&';
            }
            if(name!=null && name!=""){
               urlQuery+='name='+name+'&';
            }
            if(firstName!=null && firstName!=""){
               urlQuery+='first_name='+firstName+'&';
            }
            if(lastName!=null && lastName!=""){
               urlQuery+='last_name='+lastName+'&';
            }
            if(customerEmail!=null && customerEmail!=""){
               urlQuery+='email='+customerEmail+'&';
            }
            if(phone!=null && phone!=""){
               urlQuery+='phone='+phone+'&';
            }
            if(company!=null && company!=""){
               urlQuery+='company='+company+'&';
            }
            if(twitter!=null && twitter!=""){
               urlQuery+='twitter='+twitter+'&';
            }
            if(labels!=null && labels!=""){
               urlQuery+='labels='+labels+'&';
            }
            if(caseIds!=null && caseIds!=""){
               urlQuery+='case_id='+caseIds+'&';
            }
            if(subject!=null && subject!=""){
               urlQuery+='subject='+subject+'&';
            }
            if(description!=null && description!=""){
               urlQuery+='description='+description+'&';
            }
            if(status!=null && status!=""){
               urlQuery+='status='+status+'&';
            }
            if(priority!=null && priority!=""){
               urlQuery+='priority='+priority+'&';
            }
            if(assignedGroup!=null && assignedGroup!=""){
               urlQuery+='assigned_group='+assignedGroup+'&';
            }
            if(assignedUser!=null && assignedUser!=""){
               urlQuery+='assigned_user='+assignedUser+'&';
            }
            if(channels!=null && channels!=""){
               urlQuery+='channels='+channels+'&';
            }
            if(notes!=null && notes!=""){
               urlQuery+='notes='+notes+'&';
            }
            if(attachments!=null && attachments!=""){
               urlQuery+='attachments='+attachments+'&';
            }
            if(caseCustomKeyName!=null && caseCustomKeyName!="" && caseCustomKeyValue!=null && caseCustomKeyValue!=""){
               urlQuery+='case_custom_'+caseCustomKeyName+'='+caseCustomKeyValue+'&';
            }
            if(created!=null && created!=""){
               urlQuery+='created='+created+'&';
            }
            if(updated!=null && updated!=""){
               urlQuery+='updated='+updated+'&';
            }
            if(changed!=null && changed!=""){
               urlQuery+='changed='+changed+'&';
            }
            if(sinceCreatedAt!=null && sinceCreatedAt!=""){
               urlQuery+='since_created_at='+sinceCreatedAt+'&';
            }
            if(maxCreatedAt!=null && maxCreatedAt!=""){
               urlQuery+='max_created_at='+maxCreatedAt+'&';
            }
            if(sinceUpdatedAt!=null && sinceUpdatedAt!=""){
               urlQuery+='since_updated_at='+sinceUpdatedAt+'&';
            }
            if(maxUpdatedAt!=null && maxUpdatedAt!=""){
               urlQuery+='max_updated_at='+maxUpdatedAt+'&';
            }
            if(sinceChangedAt!=null && sinceChangedAt!=""){
               urlQuery+='since_changed_at='+sinceChangedAt+'&';
            }
            if(maxChangedAt!=null && maxChangedAt!=""){
               urlQuery+='max_changed_at='+maxChangedAt+'&';
            }
            if(sinceId!=null && sinceId!=""){
               urlQuery+='since_id='+sinceId+'&';
            }
            if(maxId!=null && maxId!=""){
               urlQuery+='max_id='+maxId+'&';
            }
            if(sortField!=null && sortField!=""){
               urlQuery+='sort_field='+sortField+'&';
            }
            if(sortDirection!=null && sortDirection!=""){
               urlQuery+='sort_direction='+sortDirection+'&';
            }
            // Add a leading '?' and remove the trailing '&'
            if(urlQuery!=""){
               urlQuery = '?' + urlQuery.toString().substring(0, urlQuery.toString().lastIndexOf("&"));
               mc.setProperty('uri.var.urlQuery', urlQuery);                               
            }                                     
         ]]>
        </script>
        <call>
            <endpoint>
                <http method="get"
                      uri-template="{+uri.var.apiUrl}/cases/search{+uri.var.urlQuery}"/>
            </endpoint>
        </call>
        <!-- Remove custom Headers from the API Response -->
        <header name="X-Runtime" action="remove" scope="transport"/>
        <header name="X-Rate-Limit-Limit" action="remove" scope="transport"/>
        <header name="X-UA-Compatible" action="remove" scope="transport"/>
        <header name="X-Rate-Limit-Remaining" action="remove" scope="transport"/>
        <header name="X-Request-Id" action="remove" scope="transport"/>
        <header name="X-Rack-Cache" action="remove" scope="transport"/>
        <header name="Status" action="remove" scope="transport"/>
        <header name="Cache-Control" action="remove" scope="transport"/>
        <header name="X-Frame-Options" action="remove" scope="transport"/>
        <header name="X-Rate-Limit-Reset" action="remove" scope="transport"/>
        <header name="X-AppVersion" action="remove" scope="transport"/>
        <header name="X-Powered-By" action="remove" scope="transport"/>
    </sequence>
</template>