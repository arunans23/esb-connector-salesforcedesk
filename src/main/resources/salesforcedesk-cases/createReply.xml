<?xml version="1.0" encoding="UTF-8"?>
<!--
 ~  Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 ~
 ~  WSO2 Inc. licenses this file to you under the Apache License,
 ~  Version 2.0 (the "License"); you may not use this file except
 ~  in compliance with the License.
 ~  You may obtain a copy of the License at
 ~
 ~    http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~  Unless required by applicable law or agreed to in writing,
 ~  software distributed under the License is distributed on an
 ~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 ~  KIND, either express or implied.  See the License for the
 ~  specific language governing permissions and limitations
 ~  under the License.
-->
<!-- API Doc: http://dev.desk.com/API/cases/#replies-create -->
<template name="createReply" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="caseId" description="The Id of the case."/>
    <parameter name="replyBody" description="The body of the reply."/>
    <parameter name="direction" description="The direction of the reply."/>
    <parameter name="status" description="The status of the reply. "/>
    <parameter name="createdAt" description="The time of reply creation"/>
    <parameter name="updatedAt" description="The time of reply modification."/>
    <parameter name="subject" description="The subject of the reply."/>
    <parameter name="linksOutboundMailbox"
               description="The outbound mailbox that will be used for the 'from' and 'reply_to' address."/>
    <parameter name="linksTwitterAccount" description="The twitter account's details."/>
    <parameter name="type" description="The type of tweet."/>
    <parameter name="enteredAt" description="The time phone reply was entered."/>
    <sequence>
        <property name="uri.var.caseId" expression="$func:caseId"/>
        <property name="uri.var.replyBody" expression="$func:replyBody"/>
        <property name="uri.var.direction" expression="$func:direction"/>
        <property name="uri.var.status" expression="$func:status"/>
        <property name="uri.var.createdAt" expression="$func:createdAt"/>
        <property name="uri.var.updatedAt" expression="$func:updatedAt"/>
        <property name="uri.var.subject" expression="$func:subject"/>
        <property name="uri.var.linksOutboundMailbox" expression="$func:linksOutboundMailbox"/>
        <property name="uri.var.linksTwitterAccount" expression="$func:linksTwitterAccount"/>
        <property name="uri.var.type" expression="$func:type"/>
        <property name="uri.var.enteredAt" expression="$func:enteredAt"/>
        <script language="js">
            <![CDATA[
            var replyBody = mc.getProperty('uri.var.replyBody');
            var direction = mc.getProperty('uri.var.direction');
            var status = mc.getProperty('uri.var.status');
            var createdAt = mc.getProperty('uri.var.createdAt');
            var updatedAt = mc.getProperty('uri.var.updatedAt');
            var subject = mc.getProperty('uri.var.subject');
            var linksOutboundMailbox = mc.getProperty('uri.var.linksOutboundMailbox');
            var linksTwitterAccount = mc.getProperty('uri.var.linksTwitterAccount');
            var type = mc.getProperty('uri.var.type');
            var enteredAt = mc.getProperty('uri.var.enteredAt');
            var urlQuery = ''+mc.getProperty("uri.var.urlQuery");
            var jsonPayload = {};
            var links = {};
            var hasLinks=false;
            if (replyBody != null && replyBody != ""){
               jsonPayload.body = replyBody;
            }
            if (direction != null && direction != ""){
               jsonPayload.direction = direction;
            }
            if (status != null && status != ""){
               jsonPayload.status = status;
            }
             if (createdAt != null && createdAt != ""){
               jsonPayload.created_at = createdAt;
            }
              if (updatedAt != null && updatedAt != ""){
               jsonPayload.updated_at = updatedAt;
            }
             if (subject != null && subject != ""){
               jsonPayload.subject = subject;
            }
             if (linksOutboundMailbox != null && linksOutboundMailbox != ""){
               links.outbound_mailbox = eval("(" + linksOutboundMailbox + ")");
               hasLinks=true;
            }
             if (linksTwitterAccount != null && linksTwitterAccount != ""){
               links.twitter_account = eval("(" + linksTwitterAccount + ")");
               hasLinks=true;
            }
             if (type != null && type != ""){
               jsonPayload.type = type;
            }
             if (enteredAt != null && enteredAt != ""){
               jsonPayload.entered_at = enteredAt;
            }
             if (hasLinks == true){
               jsonPayload._links = links;
            }          
            // Add a leading '?' and remove the trailing '&'
            if (urlQuery != "") {
               urlQuery = '?' + urlQuery.toString().substring(0, urlQuery.toString().lastIndexOf("&"));
               mc.setProperty('uri.var.urlQuery', urlQuery);
            }
            mc.setPayloadJSON(jsonPayload);
           ]]>
        </script>
        <call>
            <endpoint>
                <http method="post"
                      uri-template="{+uri.var.apiUrl}/cases/{+uri.var.caseId}/replies{+uri.var.urlQuery}"/>
            </endpoint>
        </call>
        <!-- Remove custom Headers from the API Response -->
        <header name="X-Runtime" action="remove" scope="transport"/>
        <header name="X-Rate-Limit-Limit" action="remove" scope="transport"/>
        <header name="X-UA-Compatible" action="remove" scope="transport"/>
        <header name="X-Rate-Limit-Remaining" action="remove" scope="transport"/>
        <header name="X-Request-Id" action="remove" scope="transport"/>
        <header name="X-Rack-Cache" action="remove" scope="transport"/>
        <header name="Status" action="remove" scope="transport"/>
        <header name="Cache-Control" action="remove" scope="transport"/>
        <header name="X-Frame-Options" action="remove" scope="transport"/>
        <header name="X-Rate-Limit-Reset" action="remove" scope="transport"/>
        <header name="X-AppVersion" action="remove" scope="transport"/>
        <header name="X-Powered-By" action="remove" scope="transport"/>
    </sequence>
</template>